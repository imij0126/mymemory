 		SELECT POST_COUNT, CREATION_DATE, TITLE, CONTENT, USERS_NAME
		FROM POST P
		JOIN USERS U ON U.USERS_ID = P.USERS_ID
		WHERE POST_NO = 3;
        
UPDATE USERS
   SET 
       USERS_NAME = '김수창',
       EMAIL = 'RRR0126@naver.com'
 WHERE USERS_ID = 'imij0126';
 
 DROP TABLE USERS;
 
SELECT USERS_NAME, EMAIL, JOB_CODE
FROM USERS U
JOIN EMPLOYEE E ON U.USERS_ID = E.USERS_ID
WHERE USERS_NAME = '최종군';


ROLLBACK;
 
create table REPLY (
    POST_NO NUMBER NOT NULL,
    REPLY_COMMENT VARCHAR2(300) NULL,
    CREATION_DATE DATE NOT NULL,
    DELETE_STATE VARCHAR2(1) ,
    USERS_ID VARCHAR2(20)
);

INSERT INTO REPLY (POST_NO, REPLY_COMMENT, CREATION_DATE, DELETE_STATE, USERS_ID)
VALUES (1, '그래 알았어 근데 니가 뭘 할 수 있는데', TO_DATE('2024-11-24', 'YYYY-MM-DD'), 'N', 'kimchangsik123');

INSERT INTO REPLY (POST_NO, REPLY_COMMENT, CREATION_DATE, DELETE_STATE, USERS_ID)
VALUES (1, '응 안할거지롱~', TO_DATE('2024-11-08', 'YYYY-MM-DD'), 'N', 'kimchangsik123');

INSERT INTO REPLY (POST_NO, REPLY_COMMENT, CREATION_DATE, DELETE_STATE, USERS_ID)
VALUES (2, '어쩔티비 저쩔티비', TO_DATE('2024-11-09', 'YYYY-MM-DD'), 'N', 'kimchangsik123');

INSERT INTO REPLY (POST_NO, REPLY_COMMENT, CREATION_DATE, DELETE_STATE, USERS_ID)
VALUES (3, '베놈3 스토리 살인자가 칼들고 오는데 춤추고 있음', TO_DATE('2024-11-10', 'YYYY-MM-DD'), 'N', 'kimchangsik123');

SELECT POST_COUNT, CREATION_DATE, TITLE, CONTENT, USERS_NAME
FROM POST P
JOIN USERS U ON U.USERS_ID = P.USERS_ID
ORDER BY P.POST_NO DESC;

INSERT INTO REPLY (POST_NO, REPLY_COMMENT, CREATION_DATE, DELETE_STATE, USERS_NAME)
SELECT 1, '감사합니다', SYSDATE, 'N', U.USERS_NAME
FROM USERS U
WHERE U.USERS_ID = 'imij0126';

CREATE TABLE NOTICE(
    USERS_ID VARCHAR2(20) NOT NULL,
    NOTICE_TITLE VARCHAR2(200) NOT NULL,
    NOTICE_CONTENT VARCHAR2(1000) NOT NULL,
    NOTICE_CREATION_DATE DATE NOT NULL,
    NOTICE_NO NUMBER NOT NULL
);

CREATE SEQUENCE NOTICE_SEQ
START WITH 1
INCREMENT BY 1
NOCACHE;

ALTER TABLE NOTICE
ADD CONSTRAINT fk_user_id
FOREIGN KEY (USERS_ID)
REFERENCES USERS (USERS_ID)
ON DELETE CASCADE;

DROP SEQUENCE NOTICE_SEQ;


INSERT INTO NOTICE (USERS_ID, NOTICE_TITLE, NOTICE_CONTENT,NOTICE_NO,NOTICE_CREATION_DATE)
VALUES ('kimchangsik123','내일부터 야근입니다.','필수이니깐 무조건하세요',1,TO_DATE('2024-11-11', 'YYYY-MM-DD'));

INSERT INTO NOTICE (USERS_ID, NOTICE_TITLE, NOTICE_CONTENT,NOTICE_NO,NOTICE_CREATION_DATE)
VALUES ('kimchangsik123','하기싫다','하기싫다 하기싫다 하기싫다 하기싫다 하기싫다 하기싫다',2,TO_DATE('2024-11-11', 'YYYY-MM-DD'));

INSERT INTO NOTICE (USERS_ID, NOTICE_TITLE, NOTICE_CONTENT,NOTICE_NO,NOTICE_CREATION_DATE)
VALUES ('kimchangsik123','집가고 싶다 ','집가고 싶다 집가고 싶다 집가고 싶다 집가고 싶다 집가고 싶다 집가고 싶다 ',3,TO_DATE('2024-11-11', 'YYYY-MM-DD'));

INSERT INTO NOTICE (USERS_ID, NOTICE_TITLE, NOTICE_CONTENT, NOTICE_NO)
VALUES ('imij0126', '안녕', '잘가', NOTICE_SEQ.NEXTVAL);

SELECT N.NOTICE_NO,N.NOTICE_TITLE,U.USERS_NAME
FROM NOTICE N
JOIN USERS U ON U.USERS_ID = N.USERS_ID
ORDER BY N.NOTICE_NO ASC;

ALTER TABLE NOTICE
ADD CONSTRAINT fk_user_id
FOREIGN KEY (USERS_ID)
REFERENCES USERS (USERS_ID)
ON DELETE CASCADE;

DROP TABLE REPLY;

commit;

DROP TABLE NOTICE;